#!/usr/bin/python
import pydsm
import argparse

parser = argparse.ArgumentParser(description='List TSM storage pools used for node')
parser.add_argument('--server', dest="server",
                   help='TSM server to connect to')
parser.add_argument('--format', dest="format",
                   choices=["readable", "csv"], default="readable",
                   help='format to use when displaying results')

group = parser.add_mutually_exclusive_group()
group.add_argument('--node', dest="node",
                   help='Name of node')
group.add_argument('--stgpool', dest="stgpool",
                   help='Storage pool to list')

args = parser.parse_args()

f = pydsm.get_formatter(args.format)

d = pydsm.dsmadmc()
d.auto_open(args.server)

if args.node is not None:
    condition = "where node_name=%s"
    cargs = (args.node.upper(), )
elif args.stgpool is not None:
    condition = "where stgpool_name=%s"
    cargs =(args.stgpool, )
else:
    condition = ""
    cargs = None

results = d.execute(
"SELECT node_name, filespace_name, stgpool_name, logical_mb AS \"Total MB\" FROM occupancy %s ORDER BY node_name, filespace_name, stgpool_name"%condition, cargs)

headers = [
    { "name": "Node", },
    { "name": "Filespace", },
    { "name": "STG Pool", },
    { "name": "Used (MiB)", "justify": "right", "format": "float", "spec": "%0.2f" },
]
f.output_results(results, headers)

d.close()
