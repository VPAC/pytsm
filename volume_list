#!/usr/bin/python
import sys
import pydsm
import argparse

parser = argparse.ArgumentParser(description='List abbreviated contents of TSM volume')
parser.add_argument('--server', dest="server",
                   help='TSM server to connect to')
parser.add_argument('--format', dest="format",
                   choices=["readable", "csv"], default="readable",
                   help='format to use when displaying results')

args = parser.parse_args()

d = pydsm.dsmadmc()
d.auto_open(args.server)


volumes = {}
results = d.execute(
"select VOLUME_NAME,LIBRARY_NAME,STATUS,LAST_USE from LIBVOLUMES")
for r in results:
    if not isinstance(r, pydsm.Message):
        v = r[0]
        if v in volumes:
            raise runtimeerror("volume %s found multiple times"%v)
        volumes[v] = r
    else:
        sys.stderr.write("Message: %s\n"%r)

d.close()


results = d.execute(
"select VOLUME_NAME,STGPOOL_NAME,EST_CAPACITY_MB,PCT_UTILIZED,EST_CAPACITY_MB*PCT_UTILIZED/100,STATUS from volumes order by VOLUME_NAME")
inlib_array = []
notinlib_array = []
known_volumes = {}
for r in results:
    if not isinstance(r, pydsm.Message):
        v = r[0]
        if v in known_volumes:
            raise runtimeerror("volume %s found multiple times"%v)
        known_volumes[v] = r
        if v in volumes:
            inlib_array.append(r + volumes[v][1:])
        else:
            notinlib_array.append(r)
    else:
        sys.stderr.write("Message: %s\n"%r)

sys.stdout.write("\n\nNOT IN LIBRARY\n")

headers = [
    { "name": "Volume", },
    { "name": "STG Pool", },
    { "name": "Capacity (MiB)", "justify": "right", "format": "float", "spec": "%0.1f"  },
    { "name": "Utilized (%)",   "justify": "right", "format": "float", "spec": "%0.1f"  },
    { "name": "Utilized (MiB)", "justify": "right", "format": "float", "spec": "%0.1f"  },
    { "name": "Status", },
]
pydsm.output_results(notinlib_array, headers, args.format)

sys.stdout.write("\n\nIN LIBRARY ASSIGNED\n")

headers = [
    { "name": "Volume", },
    { "name": "STG Pool", },
    { "name": "Capacity (MiB)", "justify": "right", "format": "float", "spec": "%0.1f"  },
    { "name": "Utilized (%)",   "justify": "right", "format": "float", "spec": "%0.1f"  },
    { "name": "Utilized (MiB)", "justify": "right", "format": "float", "spec": "%0.1f"  },
    { "name": "Status", },
    { "name": "Library", },
    { "name": "Status", },
    { "name": "Usage", },
]
pydsm.output_results(inlib_array, headers, args.format)

sys.stdout.write("\n\nIN LIBRARY NOT ASSIGNED\n")

result_array = []
for _,r in volumes.items():
    if not isinstance(r, pydsm.Message):
        v = r[0]
        if v not in known_volumes:
            result_array.append(r)
    else:
        sys.stderr.write("Message: %s\n"%r)

headers = [
    { "name": "Volume", },
    { "name": "Library", },
    { "name": "Status", },
    { "name": "Usage", },
]
pydsm.output_results(result_array, headers, args.format)
